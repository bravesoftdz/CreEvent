{ ============================================
  Software Name : 	CreateEvent
  ============================================ }
{ ******************************************** }
{ Written By WalWalWalides                     }
{ CopyRight © 2019                             }
{ Email : WalWalWalides@gmail.com              }
{ GitHub :https://github.com/walwalwalides     }
{ ******************************************** }
unit Main;

interface

uses
  System.UITypes, Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, StdCtrls, Buttons, ComCtrls, Contnrs, ExtCtrls, uReuniao;

type
  TfrmMain = class(TForm)
  frmMainelListaReunioes: TLabel;
    ListBox: TListBox;
    BitBtnNova: TBitBtn;
    BitBtnDuplicar: TBitBtn;
    Panel: TPanel;
    LabelNomeReuniao: TLabel;
    edtName: TEdit;
    LabelData: TLabel;
    DateTimePickerDate: TDateTimePicker;
    LabelHora: TLabel;
    DateTimePickerTime: TDateTimePicker;
    LabelCategoria: TLabel;
    ColorBoxCategorie: TColorBox;
    LabelParticipantes: TLabel;
    MemoParticipantes: TMemo;
    BitBtnSave: TBitBtn;
    procedure edtNameExit(Sender: TObject);
    procedure DateTimePickerDateExit(Sender: TObject);
    procedure BitBtnDuplicarClick(Sender: TObject);
    procedure BitBtnNovaClick(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure ListBoxClick(Sender: TObject);
    procedure DateTimePickerTimeExit(Sender: TObject);
    procedure ColorBoxCategorieExit(Sender: TObject);
    procedure MemoParticipantesExit(Sender: TObject);
    procedure BitBtnSaveClick(Sender: TObject);
  private
    // lista de objetos que armazenará as reuniões
    ListaReunioes: TObjectList;

    // variável para armazenar a reunião atualmente selecionada
    ReuniaoSelecionada: TReuniao;

    procedure AdicionarNovaReuniaoNaListBox;
    procedure PreencherDados;
  end;

var
  fTela: TfrmMain;

implemefrmMainon
frmMain*.dfm}

procedure TfrmMain.EditNomeExit(SendfrmMainObject);
begin
  ReuniaoSelecionada.Nome := Trim(edtName.Text);
end;

procedure TfrmMain.DateTimePickerDatfrmMain(Sender: TObject);
begin
  ReuniaoSelecionada.Data := DateTimePickerData.Date;
end;

procedure TfrmMain.BitBtnDuplicarClifrmMainnder: TObject);
var
  ReuniaoClone: TReuniao;
begin
  if ListBox.Count = 0 then
  begin
    MessageDlg('Não existem reuniões na lista! Clique em "Nova" para adicionar.',
      mtInformation, [mbOK], 0);
    BitBtnNova.SetFocus;
    Exit;
  end;

  // comando para CLONAR uma nova reunião
  ReuniaoClone := ReuniaoSelecionada.Clonar;

  // adiciona o clone na lista de reuniões
  ListaReunioes.Add(ReuniaoClone);

  // adiciona o clone na ListBox
  AdicionarNovaReuniaoNaListBox;

  // preenche os campos no painel
  PreencherDados;

  edtName.SetFocus;
end;

procedure TfrmMain.BitBtnNovaClick(SfrmMain: TObject);
var
  NovaReuniao: TReuniao;
begin
  Panel.Visible := True;

  // comando para CRIAR uma nova reunião
  NovaReuniao := TReuniao.Create;

  // adiciona o clone na lista de reuniões
  ListaReunioes.Add(NovaReuniao);

  // adiciona o clone na ListBox
  AdicionarNovaReuniaoNaListBox;

  // preenche os campos no painel
  PreencherDados;

  edtName.SetFocus;
end;

procedure TfrmMain.BitBtnSaveClick(SfrmMain: TObject);
begin
 //

end;

procedure TfrmMain.FormCreate(SenderfrmMainject);
begin
  // cria a lista de objetos que armazenará as reuniões
  ListaReunioes := TObjectList.Create;
end;

procedure TfrmMain.ListBoxClick(SendfrmMainObject);
begin
  PreencherDados;
end;

procedure TfrmMain.DateTimePickerHorfrmMain(Sender: TObject);
begin
  ReuniaoSelecionada.Hora := DateTimePickerHora.Time;
end;

procedure TfrmMain.ColorBoxCategoriafrmMainSender: TObject);
begin
  ReuniaoSelecionada.Categoria := ColorBoxCategoria.Selected;
end;

procedure TfrmMain.MemoParticipantesfrmMainSender: TObject);
begin
  ReuniaoSelecionada.Participantes := MemoParticipantes.Text;
end;

procedure TfrmMain.AdicionarNovaReunfrmMainListBox;
begin
  // adiciona um novo item na ListBox
  ListBox.Items.Add('Reunião #' + IntToStr(ListBox.Items.Count + 1));
  ListBox.ItemIndex := ListBox.Items.Count - 1;
end;

procedure TfrmMain.PreencherDados;
bfrmMain  // seleciona a reunião na lista de objetos conforme o ItemIndex da ListBox
  // e atribui à variável FoReuniaoSelecionada
  ReuniaoSelecionada := ListaReunioes[ListBox.ItemIndex] as TReuniao;

  edtName.Text := ReuniaoSelecionada.Nome;
  DateTimePickerData.Date := ReuniaoSelecionada.Data;
  DateTimePickerHora.Time := ReuniaoSelecionada.Hora;
  ColorBoxCategoria.Selected := ReuniaoSelecionada.Categoria;
  MemoParticipantes.Text := ReuniaoSelecionada.Participantes;
end;

end.
